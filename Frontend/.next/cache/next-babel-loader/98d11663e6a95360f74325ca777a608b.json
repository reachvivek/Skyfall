{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\V.K. SINGH\\\\Desktop\\\\American Express\\\\Skyfall\\\\Main\\\\Frontend\\\\pages\\\\dashboard.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // react components for routing our app without refresh\n\nimport Link from \"next/link\"; // @material-ui/core components\n\nimport { makeStyles } from \"@material-ui/core/styles\"; // core components\n\nimport GridContainer from \"components/Grid/GridContainer.js\";\nimport GridItem from \"components/Grid/GridItem.js\"; // sections for this page\n\nimport NavPills from \"components/NavPills/NavPills.js\"; // @material-ui/icons\n\nimport Dashboard from \"@material-ui/icons/Dashboard\";\nimport Schedule from \"@material-ui/icons/Schedule\";\nimport List from \"@material-ui/icons/List\";\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport PaymentIcon from \"@material-ui/icons/Payment\";\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\nimport NotesIcon from \"@material-ui/icons/Notes\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport Button from \"components/CustomButtons/Button.js\";\nimport styles from \"assets/jss/nextjs-material-kit/pages/components.js\"; //Material Table\n\nimport MaterialTable from \"material-table\";\nconst useStyles = makeStyles(styles);\nexport default function Components(props) {\n  const classes = useStyles();\n  const [state, setState] = React.useState({\n    columns: [{\n      title: \"Domain\",\n      field: \"domain\"\n    }, {\n      title: \"Username\",\n      field: \"username\"\n    }, {\n      title: \"Password\",\n      field: \"password\",\n      type: \"password\"\n    }],\n    data: [{\n      domain: \"gmail.com\",\n      username: \"vivekkumarsingh.8991@gmail.com\",\n      password: \"************\"\n    }, {\n      domain: \"amazon.in\",\n      username: \"6380823262\",\n      password: \"************\"\n    }, {\n      domain: \"facebook.com\",\n      username: \"8084555818\",\n      password: \"************\"\n    }, {\n      domain: \"apple.com\",\n      username: \"reachvivek@outlook.com\",\n      password: \"************\"\n    }, {\n      domain: \"myntra.in\",\n      username: \"6380823262\",\n      password: \"************\"\n    }, {\n      domain: \"flipkart.com\",\n      username: \"vivekkumarsingh.8991@gmail.com\",\n      password: \"************\"\n    }, {\n      domain: \"shopify.in\",\n      username: \"6380823262\",\n      password: \"************\"\n    }, {\n      domain: \"netflix.com\",\n      username: \"rogerthatvivek@gmail.com\",\n      password: \"************\"\n    }, {\n      domain: \"primeVideo.in\",\n      username: \"6380823262\",\n      password: \"************\"\n    }]\n  });\n  return __jsx(\"div\", {\n    className: classNames(classes.main),\n    style: {\n      height: \"100vh\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, __jsx(GridContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }, __jsx(GridItem, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }\n  }, __jsx(NavPills, {\n    color: \"info\",\n    horizontal: {\n      tabsGrid: {\n        xs: 3,\n        sm: 3,\n        md: 2,\n        lg: 2\n      },\n      contentGrid: {\n        xs: 9,\n        sm: 9,\n        md: 8,\n        lg: 9\n      }\n    },\n    tabs: [{\n      tabButton: \"Passwords\",\n      tabIcon: LockOpenIcon,\n      tabContent: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 19\n        }\n      }, __jsx(MaterialTable, {\n        title: \"Your Credentials\",\n        columns: state.columns,\n        data: state.data,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              });\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return _objectSpread({}, prevState, {\n                    data\n                  });\n                });\n              }\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              });\n            }, 600);\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }\n      }))\n    }, {\n      tabButton: \"Payments\",\n      tabIcon: PaymentIcon,\n      tabContent: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 19\n        }\n      }, __jsx(MaterialTable, {\n        title: \"Your Credentials\",\n        columns: state.columns,\n        data: state.data,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              });\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return _objectSpread({}, prevState, {\n                    data\n                  });\n                });\n              }\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              });\n            }, 600);\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }\n      }))\n    }, {\n      tabButton: \"Secure Notes\",\n      tabIcon: NotesIcon,\n      tabContent: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 19\n        }\n      }, __jsx(MaterialTable, {\n        title: \"Your Credentials\",\n        columns: state.columns,\n        data: state.data,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              });\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return _objectSpread({}, prevState, {\n                    data\n                  });\n                });\n              }\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              });\n            }, 600);\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }\n      }))\n    }, {\n      tabButton: \"Personal Data\",\n      tabIcon: PermIdentityIcon,\n      tabContent: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 19\n        }\n      }, __jsx(MaterialTable, {\n        title: \"Your Credentials\",\n        columns: state.columns,\n        data: state.data,\n        editable: {\n          onRowAdd: newData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.push(newData);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              });\n            }, 600);\n          }),\n          onRowUpdate: (newData, oldData) => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n\n              if (oldData) {\n                setState(prevState => {\n                  const data = [...prevState.data];\n                  data[data.indexOf(oldData)] = newData;\n                  return _objectSpread({}, prevState, {\n                    data\n                  });\n                });\n              }\n            }, 600);\n          }),\n          onRowDelete: oldData => new Promise(resolve => {\n            setTimeout(() => {\n              resolve();\n              setState(prevState => {\n                const data = [...prevState.data];\n                data.splice(data.indexOf(oldData), 1);\n                return _objectSpread({}, prevState, {\n                  data\n                });\n              });\n            }, 600);\n          })\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 21\n        }\n      }))\n    }, {\n      tabButton: \"My Account\",\n      tabIcon: SettingsIcon,\n      tabContent: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 307,\n          columnNumber: 19\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 21\n        }\n      }, \"Account Settings and Other Preferences\"))\n    }, {\n      tabButton: \"Log Out\",\n      tabIcon: PowerSettingsNewIcon,\n      tabContent: __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 19\n        }\n      }, __jsx(Link, {\n        href: \"../home\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 317,\n          columnNumber: 21\n        }\n      }, __jsx(Button, {\n        color: \"danger\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 23\n        }\n      }, \"Sign out\")))\n    }],\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"sources":["C:/Users/V.K. SINGH/Desktop/American Express/Skyfall/Main/Frontend/pages/dashboard.js"],"names":["React","classNames","Link","makeStyles","GridContainer","GridItem","NavPills","Dashboard","Schedule","List","LockOpenIcon","LockIcon","PaymentIcon","PermIdentityIcon","NotesIcon","SettingsIcon","PowerSettingsNewIcon","Button","styles","MaterialTable","useStyles","Components","props","classes","state","setState","useState","columns","title","field","type","data","domain","username","password","main","height","tabsGrid","xs","sm","md","lg","contentGrid","tabButton","tabIcon","tabContent","onRowAdd","newData","Promise","resolve","setTimeout","prevState","push","onRowUpdate","oldData","indexOf","onRowDelete","splice"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// react components for routing our app without refresh\r\nimport Link from \"next/link\";\r\n// @material-ui/core components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\n// core components\r\nimport GridContainer from \"components/Grid/GridContainer.js\";\r\nimport GridItem from \"components/Grid/GridItem.js\";\r\n\r\n// sections for this page\r\nimport NavPills from \"components/NavPills/NavPills.js\";\r\n\r\n// @material-ui/icons\r\nimport Dashboard from \"@material-ui/icons/Dashboard\";\r\nimport Schedule from \"@material-ui/icons/Schedule\";\r\nimport List from \"@material-ui/icons/List\";\r\nimport LockOpenIcon from \"@material-ui/icons/LockOpen\";\r\nimport LockIcon from \"@material-ui/icons/Lock\";\r\nimport PaymentIcon from \"@material-ui/icons/Payment\";\r\nimport PermIdentityIcon from \"@material-ui/icons/PermIdentity\";\r\nimport NotesIcon from \"@material-ui/icons/Notes\";\r\nimport SettingsIcon from \"@material-ui/icons/Settings\";\r\nimport PowerSettingsNewIcon from \"@material-ui/icons/PowerSettingsNew\";\r\nimport Button from \"components/CustomButtons/Button.js\";\r\nimport styles from \"assets/jss/nextjs-material-kit/pages/components.js\";\r\n\r\n//Material Table\r\nimport MaterialTable from \"material-table\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function Components(props) {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    columns: [\r\n      { title: \"Domain\", field: \"domain\" },\r\n      { title: \"Username\", field: \"username\" },\r\n      { title: \"Password\", field: \"password\", type: \"password\" },\r\n    ],\r\n    data: [\r\n      {\r\n        domain: \"gmail.com\",\r\n        username: \"vivekkumarsingh.8991@gmail.com\",\r\n        password: \"************\",\r\n      },\r\n      {\r\n        domain: \"amazon.in\",\r\n        username: \"6380823262\",\r\n        password: \"************\",\r\n      },\r\n      {\r\n        domain: \"facebook.com\",\r\n        username: \"8084555818\",\r\n        password: \"************\",\r\n      },\r\n      {\r\n        domain: \"apple.com\",\r\n        username: \"reachvivek@outlook.com\",\r\n        password: \"************\",\r\n      },\r\n      {\r\n        domain: \"myntra.in\",\r\n        username: \"6380823262\",\r\n        password: \"************\",\r\n      },\r\n      {\r\n        domain: \"flipkart.com\",\r\n        username: \"vivekkumarsingh.8991@gmail.com\",\r\n        password: \"************\",\r\n      },\r\n      {\r\n        domain: \"shopify.in\",\r\n        username: \"6380823262\",\r\n        password: \"************\",\r\n      },\r\n      {\r\n        domain: \"netflix.com\",\r\n        username: \"rogerthatvivek@gmail.com\",\r\n        password: \"************\",\r\n      },\r\n      {\r\n        domain: \"primeVideo.in\",\r\n        username: \"6380823262\",\r\n        password: \"************\",\r\n      },\r\n    ],\r\n  });\r\n\r\n  return (\r\n    <div className={classNames(classes.main)} style={{ height: \"100vh\" }}>\r\n      <GridContainer>\r\n        <GridItem>\r\n          <NavPills\r\n            color=\"info\"\r\n            horizontal={{\r\n              tabsGrid: { xs: 3, sm: 3, md: 2, lg: 2 },\r\n              contentGrid: { xs: 9, sm: 9, md: 8, lg: 9 },\r\n            }}\r\n            tabs={[\r\n              {\r\n                tabButton: \"Passwords\",\r\n                tabIcon: LockOpenIcon,\r\n                tabContent: (\r\n                  <span>\r\n                    <MaterialTable\r\n                      title=\"Your Credentials\"\r\n                      columns={state.columns}\r\n                      data={state.data}\r\n                      editable={{\r\n                        onRowAdd: (newData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.push(newData);\r\n                                return { ...prevState, data };\r\n                              });\r\n                            }, 600);\r\n                          }),\r\n                        onRowUpdate: (newData, oldData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              if (oldData) {\r\n                                setState((prevState) => {\r\n                                  const data = [...prevState.data];\r\n                                  data[data.indexOf(oldData)] = newData;\r\n                                  return { ...prevState, data };\r\n                                });\r\n                              }\r\n                            }, 600);\r\n                          }),\r\n                        onRowDelete: (oldData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                              });\r\n                            }, 600);\r\n                          }),\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ),\r\n              },\r\n              {\r\n                tabButton: \"Payments\",\r\n                tabIcon: PaymentIcon,\r\n                tabContent: (\r\n                  <span>\r\n                    <MaterialTable\r\n                      title=\"Your Credentials\"\r\n                      columns={state.columns}\r\n                      data={state.data}\r\n                      editable={{\r\n                        onRowAdd: (newData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.push(newData);\r\n                                return { ...prevState, data };\r\n                              });\r\n                            }, 600);\r\n                          }),\r\n                        onRowUpdate: (newData, oldData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              if (oldData) {\r\n                                setState((prevState) => {\r\n                                  const data = [...prevState.data];\r\n                                  data[data.indexOf(oldData)] = newData;\r\n                                  return { ...prevState, data };\r\n                                });\r\n                              }\r\n                            }, 600);\r\n                          }),\r\n                        onRowDelete: (oldData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                              });\r\n                            }, 600);\r\n                          }),\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ),\r\n              },\r\n              {\r\n                tabButton: \"Secure Notes\",\r\n                tabIcon: NotesIcon,\r\n                tabContent: (\r\n                  <span>\r\n                    <MaterialTable\r\n                      title=\"Your Credentials\"\r\n                      columns={state.columns}\r\n                      data={state.data}\r\n                      editable={{\r\n                        onRowAdd: (newData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.push(newData);\r\n                                return { ...prevState, data };\r\n                              });\r\n                            }, 600);\r\n                          }),\r\n                        onRowUpdate: (newData, oldData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              if (oldData) {\r\n                                setState((prevState) => {\r\n                                  const data = [...prevState.data];\r\n                                  data[data.indexOf(oldData)] = newData;\r\n                                  return { ...prevState, data };\r\n                                });\r\n                              }\r\n                            }, 600);\r\n                          }),\r\n                        onRowDelete: (oldData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                              });\r\n                            }, 600);\r\n                          }),\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ),\r\n              },\r\n              {\r\n                tabButton: \"Personal Data\",\r\n                tabIcon: PermIdentityIcon,\r\n                tabContent: (\r\n                  <span>\r\n                    <MaterialTable\r\n                      title=\"Your Credentials\"\r\n                      columns={state.columns}\r\n                      data={state.data}\r\n                      editable={{\r\n                        onRowAdd: (newData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.push(newData);\r\n                                return { ...prevState, data };\r\n                              });\r\n                            }, 600);\r\n                          }),\r\n                        onRowUpdate: (newData, oldData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              if (oldData) {\r\n                                setState((prevState) => {\r\n                                  const data = [...prevState.data];\r\n                                  data[data.indexOf(oldData)] = newData;\r\n                                  return { ...prevState, data };\r\n                                });\r\n                              }\r\n                            }, 600);\r\n                          }),\r\n                        onRowDelete: (oldData) =>\r\n                          new Promise((resolve) => {\r\n                            setTimeout(() => {\r\n                              resolve();\r\n                              setState((prevState) => {\r\n                                const data = [...prevState.data];\r\n                                data.splice(data.indexOf(oldData), 1);\r\n                                return { ...prevState, data };\r\n                              });\r\n                            }, 600);\r\n                          }),\r\n                      }}\r\n                    />\r\n                  </span>\r\n                ),\r\n              },\r\n              {\r\n                tabButton: \"My Account\",\r\n                tabIcon: SettingsIcon,\r\n                tabContent: (\r\n                  <span>\r\n                    <h1>Account Settings and Other Preferences</h1>\r\n                  </span>\r\n                ),\r\n              },\r\n              {\r\n                tabButton: \"Log Out\",\r\n                tabIcon: PowerSettingsNewIcon,\r\n                tabContent: (\r\n                  <span>\r\n                    <Link href=\"../home\">\r\n                      <Button color=\"danger\">Sign out</Button>\r\n                    </Link>\r\n                  </span>\r\n                ),\r\n              },\r\n            ]}\r\n          />\r\n        </GridItem>\r\n      </GridContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}