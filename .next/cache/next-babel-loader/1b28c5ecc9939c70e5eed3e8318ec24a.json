{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\V.K. SINGH\\\\Desktop\\\\American Express\\\\Skyfall\\\\Frontend\\\\pages\\\\_app.js\";\nvar __jsx = React.createElement;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"next/app\";\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport Amplify from \"@aws-amplify/core\";\nimport Auth from \"@aws-amplify/auth\";\nimport PageChange from \"components/PageChange/PageChange.js\";\nimport \"assets/scss/nextjs-material-kit.scss?v=1.1.0\";\nAmplify.configure({\n  Auth: {\n    region: \"ap-south-1\",\n    //! Konfiguration\n    userPoolId: process.env.USER_POOL_ID,\n    userPoolWebClientId: process.env.USER_POOL_CLIENT_ID,\n    // OPTIONAL - Configuration for cookie storage\n    // Note: if the secure flag is set to true, then the cookie transmission requires a secure protocol\n    // example taken from https://aws-amplify.github.io/docs/js/authentication\n    cookieStorage: {\n      // REQUIRED - Cookie domain (only required if cookieStorage is provided)\n      // This should be the subdomain in production as the cookie should only\n      // be present for the current site\n      domain: process.env.AUTH_COOKIE_DOMAIN,\n      // OPTIONAL - Cookie path\n      path: \"/\",\n      // OPTIONAL - Cookie expiration in days\n      expires: 7,\n      // OPTIONAL - Cookie secure flag\n      // Either true or false, indicating if the cookie transmission requires a secure protocol (https).\n      // The cookie can be secure in production\n      secure: false\n    }\n  }\n});\nAuth.configure({\n  oauth: {\n    domain: process.env.IDP_DOMAIN,\n    scope: [\"email\", \"openid\"],\n    // we need the /autologin step in between to set the cookies properly,\n    // we don't need that when signing out though\n    redirectSignIn: process.env.REDIRECT_SIGN_IN,\n    redirectSignOut: process.env.REDIRECT_SIGN_OUT,\n    responseType: \"token\"\n  }\n});\nRouter.events.on(\"routeChangeStart\", url => {\n  console.log(`Loading: ${url}`);\n  document.body.classList.add(\"body-page-transition\");\n  ReactDOM.render(__jsx(PageChange, {\n    path: url,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }), document.getElementById(\"page-transition\"));\n});\nRouter.events.on(\"routeChangeComplete\", () => {\n  ReactDOM.unmountComponentAtNode(document.getElementById(\"page-transition\"));\n  document.body.classList.remove(\"body-page-transition\");\n});\nRouter.events.on(\"routeChangeError\", () => {\n  ReactDOM.unmountComponentAtNode(document.getElementById(\"page-transition\"));\n  document.body.classList.remove(\"body-page-transition\");\n});\nexport default class MyApp extends App {\n  componentDidMount() {}\n\n  static async getInitialProps({\n    Component,\n    router,\n    ctx\n  }) {\n    let pageProps = {};\n\n    if (Component.getInitialProps) {\n      pageProps = await Component.getInitialProps(ctx);\n    }\n\n    return {\n      pageProps\n    };\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }, \"SKYFALL\")), __jsx(Component, _extends({}, pageProps, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["C:/Users/V.K. SINGH/Desktop/American Express/Skyfall/Frontend/pages/_app.js"],"names":["React","ReactDOM","App","Head","Router","Amplify","Auth","PageChange","configure","region","userPoolId","process","env","USER_POOL_ID","userPoolWebClientId","USER_POOL_CLIENT_ID","cookieStorage","domain","AUTH_COOKIE_DOMAIN","path","expires","secure","oauth","IDP_DOMAIN","scope","redirectSignIn","REDIRECT_SIGN_IN","redirectSignOut","REDIRECT_SIGN_OUT","responseType","events","on","url","console","log","document","body","classList","add","render","getElementById","unmountComponentAtNode","remove","MyApp","componentDidMount","getInitialProps","Component","router","ctx","pageProps","props"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,GAAP,MAAgB,UAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AAEA,OAAOC,UAAP,MAAuB,qCAAvB;AAEA,OAAO,8CAAP;AAEAF,OAAO,CAACG,SAAR,CAAkB;AAChBF,EAAAA,IAAI,EAAE;AACJG,IAAAA,MAAM,EAAE,YADJ;AACkB;AACtBC,IAAAA,UAAU,EAAEC,OAAO,CAACC,GAAR,CAAYC,YAFpB;AAGJC,IAAAA,mBAAmB,EAAEH,OAAO,CAACC,GAAR,CAAYG,mBAH7B;AAKJ;AACA;AACA;AACAC,IAAAA,aAAa,EAAE;AACb;AACA;AACA;AACAC,MAAAA,MAAM,EAAEN,OAAO,CAACC,GAAR,CAAYM,kBAJP;AAKb;AACAC,MAAAA,IAAI,EAAE,GANO;AAOb;AACAC,MAAAA,OAAO,EAAE,CARI;AASb;AACA;AACA;AACAC,MAAAA,MAAM,EAAE;AAZK;AARX;AADU,CAAlB;AA0BAf,IAAI,CAACE,SAAL,CAAe;AACbc,EAAAA,KAAK,EAAE;AACLL,IAAAA,MAAM,EAAEN,OAAO,CAACC,GAAR,CAAYW,UADf;AAELC,IAAAA,KAAK,EAAE,CAAC,OAAD,EAAU,QAAV,CAFF;AAGL;AACA;AACAC,IAAAA,cAAc,EAAEd,OAAO,CAACC,GAAR,CAAYc,gBALvB;AAMLC,IAAAA,eAAe,EAAEhB,OAAO,CAACC,GAAR,CAAYgB,iBANxB;AAOLC,IAAAA,YAAY,EAAE;AAPT;AADM,CAAf;AAYAzB,MAAM,CAAC0B,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAsCC,GAAD,IAAS;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAa,YAAWF,GAAI,EAA5B;AACAG,EAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBC,GAAxB,CAA4B,sBAA5B;AACArC,EAAAA,QAAQ,CAACsC,MAAT,CACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEP,GAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEEG,QAAQ,CAACK,cAAT,CAAwB,iBAAxB,CAFF;AAID,CAPD;AAQApC,MAAM,CAAC0B,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,MAAM;AAC5C9B,EAAAA,QAAQ,CAACwC,sBAAT,CAAgCN,QAAQ,CAACK,cAAT,CAAwB,iBAAxB,CAAhC;AACAL,EAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBK,MAAxB,CAA+B,sBAA/B;AACD,CAHD;AAIAtC,MAAM,CAAC0B,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAM;AACzC9B,EAAAA,QAAQ,CAACwC,sBAAT,CAAgCN,QAAQ,CAACK,cAAT,CAAwB,iBAAxB,CAAhC;AACAL,EAAAA,QAAQ,CAACC,IAAT,CAAcC,SAAd,CAAwBK,MAAxB,CAA+B,sBAA/B;AACD,CAHD;AAKA,eAAe,MAAMC,KAAN,SAAoBzC,GAApB,CAAwB;AACrC0C,EAAAA,iBAAiB,GAAG,CAAE;;AACtB,eAAaC,eAAb,CAA6B;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,MAAb;AAAqBC,IAAAA;AAArB,GAA7B,EAAyD;AACvD,QAAIC,SAAS,GAAG,EAAhB;;AAEA,QAAIH,SAAS,CAACD,eAAd,EAA+B;AAC7BI,MAAAA,SAAS,GAAG,MAAMH,SAAS,CAACD,eAAV,CAA0BG,GAA1B,CAAlB;AACD;;AAED,WAAO;AAAEC,MAAAA;AAAF,KAAP;AACD;;AACDV,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEO,MAAAA,SAAF;AAAaG,MAAAA;AAAb,QAA2B,KAAKC,KAAtC;AAEA,WACE,MAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CADF,EAIE,MAAC,SAAD,eAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF,CADF;AAQD;;AAtBoC","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"next/app\";\r\nimport Head from \"next/head\";\r\nimport Router from \"next/router\";\r\nimport Amplify from \"@aws-amplify/core\";\r\nimport Auth from \"@aws-amplify/auth\";\r\n\r\nimport PageChange from \"components/PageChange/PageChange.js\";\r\n\r\nimport \"assets/scss/nextjs-material-kit.scss?v=1.1.0\";\r\n\r\nAmplify.configure({\r\n  Auth: {\r\n    region: \"ap-south-1\", //! Konfiguration\r\n    userPoolId: process.env.USER_POOL_ID,\r\n    userPoolWebClientId: process.env.USER_POOL_CLIENT_ID,\r\n\r\n    // OPTIONAL - Configuration for cookie storage\r\n    // Note: if the secure flag is set to true, then the cookie transmission requires a secure protocol\r\n    // example taken from https://aws-amplify.github.io/docs/js/authentication\r\n    cookieStorage: {\r\n      // REQUIRED - Cookie domain (only required if cookieStorage is provided)\r\n      // This should be the subdomain in production as the cookie should only\r\n      // be present for the current site\r\n      domain: process.env.AUTH_COOKIE_DOMAIN,\r\n      // OPTIONAL - Cookie path\r\n      path: \"/\",\r\n      // OPTIONAL - Cookie expiration in days\r\n      expires: 7,\r\n      // OPTIONAL - Cookie secure flag\r\n      // Either true or false, indicating if the cookie transmission requires a secure protocol (https).\r\n      // The cookie can be secure in production\r\n      secure: false,\r\n    },\r\n  },\r\n});\r\n\r\nAuth.configure({\r\n  oauth: {\r\n    domain: process.env.IDP_DOMAIN,\r\n    scope: [\"email\", \"openid\"],\r\n    // we need the /autologin step in between to set the cookies properly,\r\n    // we don't need that when signing out though\r\n    redirectSignIn: process.env.REDIRECT_SIGN_IN,\r\n    redirectSignOut: process.env.REDIRECT_SIGN_OUT,\r\n    responseType: \"token\",\r\n  },\r\n});\r\n\r\nRouter.events.on(\"routeChangeStart\", (url) => {\r\n  console.log(`Loading: ${url}`);\r\n  document.body.classList.add(\"body-page-transition\");\r\n  ReactDOM.render(\r\n    <PageChange path={url} />,\r\n    document.getElementById(\"page-transition\")\r\n  );\r\n});\r\nRouter.events.on(\"routeChangeComplete\", () => {\r\n  ReactDOM.unmountComponentAtNode(document.getElementById(\"page-transition\"));\r\n  document.body.classList.remove(\"body-page-transition\");\r\n});\r\nRouter.events.on(\"routeChangeError\", () => {\r\n  ReactDOM.unmountComponentAtNode(document.getElementById(\"page-transition\"));\r\n  document.body.classList.remove(\"body-page-transition\");\r\n});\r\n\r\nexport default class MyApp extends App {\r\n  componentDidMount() {}\r\n  static async getInitialProps({ Component, router, ctx }) {\r\n    let pageProps = {};\r\n\r\n    if (Component.getInitialProps) {\r\n      pageProps = await Component.getInitialProps(ctx);\r\n    }\r\n\r\n    return { pageProps };\r\n  }\r\n  render() {\r\n    const { Component, pageProps } = this.props;\r\n\r\n    return (\r\n      <React.Fragment>\r\n        <Head>\r\n          <title>SKYFALL</title>\r\n        </Head>\r\n        <Component {...pageProps} />\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}